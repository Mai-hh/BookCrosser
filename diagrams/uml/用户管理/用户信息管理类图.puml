@startuml
skinparam classAttributeIconSize 0

class UserProfileActivity {
    - userProfileFragment: UserProfileFragment
    - userProfileViewModel: UserProfileViewModel
    + onCreate()
    + onUserProfileUpdated()
    + onLogoutSuccess()
}

class UserProfileFragment {
    - userProfileForm: UserProfileForm
    - userProfileViewModel: UserProfileViewModel
    + onCreateView()
    + onEditButtonClicked()
    + onSaveButtonClicked()
    + onLogoutButtonClicked()
    + showUserProfile(user: User)
    + showEditMode()
    + showViewMode()
    + showUpdateSuccess()
    + showUpdateError(errorMessage: String)
}

class UserProfileForm {
    - userId: Long
    - nickname: String
    - avatar: String
    - email: String
    - phone: String
    + isValid(): Boolean
    + toUser(): User
    + fromUser(user: User)
}

class UserProfileViewModel {
    - userService: UserService
    + getUserProfile()
    + updateUserProfile(userProfileForm: UserProfileForm)
    + logout()
    + onUserProfileUpdated(user: User)
    + onUpdateSuccess()
    + onUpdateError(errorMessage: String)
    + onLogoutSuccess()
}

class UserService {
    - userRepository: UserRepository
    + getUserById(userId: Long): User
    + updateUser(user: User): User
    + logout()
}

class UserRepository {
    + findById(userId: Long): User
    + save(user: User): User
}

class User {
    - id: Long
    - username: String
    - password: String
    - nickname: String
    - avatar: String
    - email: String
    - phone: String
    - roles: List<Role>
}

class Role {
    - id: Long
    - name: String
}

UserProfileActivity ..> UserProfileFragment
UserProfileActivity ..> UserProfileViewModel

UserProfileFragment ..> UserProfileForm
UserProfileFragment ..> UserProfileViewModel

UserProfileViewModel ..> UserService

UserService ..> UserRepository

UserRepository ..> User

User *--> "*" Role
@enduml